{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Teaching with TACC A Guide for Using TACC Resources in Course Curricula This is a collection of information, scripts, and tips meant to aid educators who are using (or would like to use) TACC resources in teaching a course. Some benefits of using TACC resources for teaching include: Scale Up: Students can access their own dedicated nodes without interfering with each other or locking up local resources. Access Hardware: TACC offers access to the latest CPUs, GPUs, FPGAs, cloud systems, visualization technologies, networks, storage systems, and other valuable resources. Data Management: Distribute, collect, and share project files with fine-grained access controls. Getting Set Up 1.1 Create a TACC Account 1.2 Choose the Right Resource 1.3 Request an Allocation 1.4 Manage Student Accounts 1.5 Install Class Software Running the Class 2.1 Share Project Files 2.2 Work Interactively on a Node 2.3 Submit Jobs to the Queue 2.4 Request a Queue Reservation 2.5 Helpful Commands Using the UTRC Portal 3.1 Getting Started 3.2 Managing Data 3.3 Accessing Data 3.4 Additional Features of the UTRC Portal Need additional help? Please submit a ticket here","title":"Home"},{"location":"#teaching-with-tacc","text":"","title":"Teaching with TACC"},{"location":"#a-guide-for-using-tacc-resources-in-course-curricula","text":"This is a collection of information, scripts, and tips meant to aid educators who are using (or would like to use) TACC resources in teaching a course. Some benefits of using TACC resources for teaching include: Scale Up: Students can access their own dedicated nodes without interfering with each other or locking up local resources. Access Hardware: TACC offers access to the latest CPUs, GPUs, FPGAs, cloud systems, visualization technologies, networks, storage systems, and other valuable resources. Data Management: Distribute, collect, and share project files with fine-grained access controls.","title":"A Guide for Using TACC Resources in Course Curricula"},{"location":"#getting-set-up","text":"1.1 Create a TACC Account 1.2 Choose the Right Resource 1.3 Request an Allocation 1.4 Manage Student Accounts 1.5 Install Class Software","title":"Getting Set Up"},{"location":"#running-the-class","text":"2.1 Share Project Files 2.2 Work Interactively on a Node 2.3 Submit Jobs to the Queue 2.4 Request a Queue Reservation 2.5 Helpful Commands","title":"Running the Class"},{"location":"#using-the-utrc-portal","text":"3.1 Getting Started 3.2 Managing Data 3.3 Accessing Data 3.4 Additional Features of the UTRC Portal Need additional help? Please submit a ticket here","title":"Using the UTRC Portal"},{"location":"01.choose_resource/","text":"Choose the Right Resource TACC offers a diverse array of systems to choose from. Choosing the right system will depend on your specific needs. The list below is not a comprehensive list of all TACC systems, but a subset of the systems that are most appropriate to teaching. Please submit a ticket here if you would like additional help choosing the correct system. Compute TACC offers a comprehensive set of high performance computing clusters that are connected through a high speed network to a 20 PB global share work file system. All users are allocated 1 TB that is accessible from all HPC and visualization resources including compute nodes. Learn more about TACC's HPC systems: Stampede2 Lonestar6 Coming Soon! GPU / Visualization TACC's GPU-based visualization systems allow researchers to conceptualize and process extremely detailed visualizations and data sets at a massive scale, and for general purpose GPU calculations. Learn more about TACC's GPU systems: Maverick2 Longhorn Stallion Lasso Cloud TACC's set of cloud services are designed for researchers who need large-scale resources, but prefer a virtualized, on-demand environment \u2013 allowing them to efficiently perform modeling and simulations, visualization, data analytics, and management from any location. Learn more about TACC's cloud systems: Jetstream Chameleon Gateways and Portals Using supercomputers can be challenging for those without much computing experience. That's why the Advanced Computing Interfaces (ACI) group at TACC develops gateways and portals tools that make using TACC resources easier \u2014 enabling more scientists and engineers to make discoveries and answer important research questions. Tapis UTRC Portal Return to the Overview","title":"Choose the Right Resource"},{"location":"01.choose_resource/#choose-the-right-resource","text":"TACC offers a diverse array of systems to choose from. Choosing the right system will depend on your specific needs. The list below is not a comprehensive list of all TACC systems, but a subset of the systems that are most appropriate to teaching. Please submit a ticket here if you would like additional help choosing the correct system.","title":"Choose the Right Resource"},{"location":"01.choose_resource/#compute","text":"TACC offers a comprehensive set of high performance computing clusters that are connected through a high speed network to a 20 PB global share work file system. All users are allocated 1 TB that is accessible from all HPC and visualization resources including compute nodes. Learn more about TACC's HPC systems: Stampede2 Lonestar6 Coming Soon!","title":"Compute"},{"location":"01.choose_resource/#gpu-visualization","text":"TACC's GPU-based visualization systems allow researchers to conceptualize and process extremely detailed visualizations and data sets at a massive scale, and for general purpose GPU calculations. Learn more about TACC's GPU systems: Maverick2 Longhorn Stallion Lasso","title":"GPU / Visualization"},{"location":"01.choose_resource/#cloud","text":"TACC's set of cloud services are designed for researchers who need large-scale resources, but prefer a virtualized, on-demand environment \u2013 allowing them to efficiently perform modeling and simulations, visualization, data analytics, and management from any location. Learn more about TACC's cloud systems: Jetstream Chameleon","title":"Cloud"},{"location":"01.choose_resource/#gateways-and-portals","text":"Using supercomputers can be challenging for those without much computing experience. That's why the Advanced Computing Interfaces (ACI) group at TACC develops gateways and portals tools that make using TACC resources easier \u2014 enabling more scientists and engineers to make discoveries and answer important research questions. Tapis UTRC Portal Return to the Overview","title":"Gateways and Portals"},{"location":"01.create_account/","text":"Create a TACC Account UT System Users TACC has a single sign-on process for users from UT System affiliated institutions. If you are a researcher in the UT System, you can create an account with your UT System Institution Credentials through this form . Log in with your institution credentials and click the I need to create a TACC account button. Enter your contact information and account information in the request form. Select your PI eligibility at this time. To know if you are PI Eligible, please review our eligibility requirements . TACC now requires Multi-Factor Authentication (MFA). To set up MFA, you can follow this tutorial . Non-UT System Users To create a TACC account, redirect your browser to the TACC User Portal . Click the Create a TACC Account button. Review the Request a TACC Portal Account page and click Continue to Create an Account . Accept the TACC Acceptable Use Policy . Enter your contact information and account information in the request form. Select your PI eligibility at this time. To know if you are PI Eligible, please review our eligibility requirements . Once your account is requested, you will receive a confirmation email within one business day with a link to verify your address. After verifying your email address, logon to the TACC User Portal . For your first login, you will be prompted to review and agree to the Terms of Use . TACC now requires Multi-Factor Authentication (MFA). To set up MFA, you can follow this tutorial . Return to the Overview","title":"Create a TACC Account"},{"location":"01.create_account/#create-a-tacc-account","text":"","title":"Create a TACC Account"},{"location":"01.create_account/#ut-system-users","text":"TACC has a single sign-on process for users from UT System affiliated institutions. If you are a researcher in the UT System, you can create an account with your UT System Institution Credentials through this form . Log in with your institution credentials and click the I need to create a TACC account button. Enter your contact information and account information in the request form. Select your PI eligibility at this time. To know if you are PI Eligible, please review our eligibility requirements . TACC now requires Multi-Factor Authentication (MFA). To set up MFA, you can follow this tutorial .","title":"UT System Users"},{"location":"01.create_account/#non-ut-system-users","text":"To create a TACC account, redirect your browser to the TACC User Portal . Click the Create a TACC Account button. Review the Request a TACC Portal Account page and click Continue to Create an Account . Accept the TACC Acceptable Use Policy . Enter your contact information and account information in the request form. Select your PI eligibility at this time. To know if you are PI Eligible, please review our eligibility requirements . Once your account is requested, you will receive a confirmation email within one business day with a link to verify your address. After verifying your email address, logon to the TACC User Portal . For your first login, you will be prompted to review and agree to the Terms of Use . TACC now requires Multi-Factor Authentication (MFA). To set up MFA, you can follow this tutorial . Return to the Overview","title":"Non-UT System Users"},{"location":"01.install_software/","text":"Install Class Software When teaching a course, you may have some software packages that the students will need to use. Rather than having each student install the software in their own directories, follow this guide to install software in one central location, then share that software with everyone in the course using modulefiles. Choose the Right Install Location Software should be installed in your work directory. Navigate to your work space and make a new folder for software: $ cd $STOCKYARD $ mkdir class-software/ $ cd class-software/ $ pwd /work/01234/username/class-software/ Please note: your work directory will be a slightly different path - please substitute in the path of your work directory when following the guide below. Download and Install Software The installation process differs for each software package, and a comprehensive guide for installing software will not be included here. Please check the user guides for whichever machine you are installing on for general installation help. It is good practice to organize installed software by package name and version. This will also help later when building modulefiles. As an example, this guide will show the process to install a tool called bedtools2 , a toolset for genome arithmetic, on Lonestar5: # Load a recent gcc module, required for bedtools2 $ module load gcc/7.3.0 # Download and unpack the tool $ wget https://github.com/arq5x/bedtools2/archive/v2.29.0.tar.gz $ tar -xvzf v2.29.0.tar.gz $ cd bedtools2-2.29.0/ # Compile the software $ make # Copy the binaries into a standard location $ DESTDIR=\"/work/01234/username/class-software/\" prefix=\"bedtools2/2.29.0\" make install The steps above will put the binaries in the folder: /work/01234/username/class-software/bedtools2/2.29.0/bin Please remember, these steps will vary from package to package and will likely only work as described for this specific package. If you choose, it is now safe to remove the source folder and tar ball downloaded from GitHub. Write the Modulefile Modules are a simple way to dynamically modify a user's environment such that specific software packages can be used. For the example above, we only need the user to load a gcc module first, then add the bedtools2 bin/ folder to their path: # Create a modulefiles directory where all modulefiles will go $ mkdir -p /work/01234/username/class-software/modulefiles/ $ cd /work/01234/username/class-software/modulefiles/ $ pwd /work/01234/username/class-software/modulefiles/ # Create a subdirectory and lua file for bedtools2, version 2.29.0 $ mkdir bedtools2/ $ touch bedtools2/2.29.0.lua All modulefiles will go in the modulefiles directory under a subfolder named after the package. Modulefiles have the extension .lua and are named after the software version. Multiple .lua files can exist in the same package subdirectory, enabling the support of multiple versions of the same package. The contents of 2.29.0.lua could include: local help_message = [[ This modulefile was prepared for the students taking A Class 101. Load this modulefile to gain access to the bedtools2/2.29.0 package. Please note that gcc/7.3.0 is a prerequisite and must be loaded first. Documentation: https://github.com/arq5x/bedtools2 Version 2.29.0 ]] help(help_message,\"\\n\") whatis(\"Name: bedtools2\") whatis(\"Version: 2.29.0\") whatis(\"Description: A powerful toolset for genome arithmetic\") whatis(\"URL: https://github.com/arq5x/bedtools2\") prepend_path(\"PATH\", \"/work/01234/username/class-software/bedtools2/2.29.0/bin\") prereq(\"gcc/7.3.0\") Don't forget to replace the PATH near the end of that file with your work directory. Please browse the /opt/apps/modulefiles/ directory on your TACC system of choice to see many other examples of modulefiles, or read the lmod documentation . Change Permissions Next, recursively adjust Linux permissions in the class-software/ folder so that students with the same Unix group can see and access the software. $ chmod g=u-w /work/01234/username/ $ chmod -R g=u-w /work/01234/username/class-software/ If you happen to be part of multiple Linux groups, you may also need to change the group on the software folder to match to instructional allocation. The group ID can be found in the Portal by clicking on the instructional allocation / project. For example, if the Unix group is G-876543 : $ chgrp G-876543 /work/01234/username/ $ chgrp -R G-876543 /work/01234/username/class-software/ Instructions to Use Class Modules Finally, the following steps can be used to access and load the new modulefile, and use the installed bedtools2 software. These steps apply to both the instructor who built the software, as well as the students: # Add the modulefile location to your modulepath: $ module use /work/01234/username/class-software/modulefiles # Save that modification so it only has to be done once $ module save # Print modulefile help text $ module help bedtools2/2.29.0 # Load the new module $ module load gcc/7.3.0 $ module load bedtools2/2.29.0 $ which bedtools /work/01234/username/class-software/bedtools2/2.29.0/bin/bedtools If you need help installing software or writing modulefiles, please submit a ticket through the TACC User Portal . Return to the Overview","title":"Install Class Software"},{"location":"01.install_software/#install-class-software","text":"When teaching a course, you may have some software packages that the students will need to use. Rather than having each student install the software in their own directories, follow this guide to install software in one central location, then share that software with everyone in the course using modulefiles.","title":"Install Class Software"},{"location":"01.install_software/#choose-the-right-install-location","text":"Software should be installed in your work directory. Navigate to your work space and make a new folder for software: $ cd $STOCKYARD $ mkdir class-software/ $ cd class-software/ $ pwd /work/01234/username/class-software/ Please note: your work directory will be a slightly different path - please substitute in the path of your work directory when following the guide below.","title":"Choose the Right Install Location"},{"location":"01.install_software/#download-and-install-software","text":"The installation process differs for each software package, and a comprehensive guide for installing software will not be included here. Please check the user guides for whichever machine you are installing on for general installation help. It is good practice to organize installed software by package name and version. This will also help later when building modulefiles. As an example, this guide will show the process to install a tool called bedtools2 , a toolset for genome arithmetic, on Lonestar5: # Load a recent gcc module, required for bedtools2 $ module load gcc/7.3.0 # Download and unpack the tool $ wget https://github.com/arq5x/bedtools2/archive/v2.29.0.tar.gz $ tar -xvzf v2.29.0.tar.gz $ cd bedtools2-2.29.0/ # Compile the software $ make # Copy the binaries into a standard location $ DESTDIR=\"/work/01234/username/class-software/\" prefix=\"bedtools2/2.29.0\" make install The steps above will put the binaries in the folder: /work/01234/username/class-software/bedtools2/2.29.0/bin Please remember, these steps will vary from package to package and will likely only work as described for this specific package. If you choose, it is now safe to remove the source folder and tar ball downloaded from GitHub.","title":"Download and Install Software"},{"location":"01.install_software/#write-the-modulefile","text":"Modules are a simple way to dynamically modify a user's environment such that specific software packages can be used. For the example above, we only need the user to load a gcc module first, then add the bedtools2 bin/ folder to their path: # Create a modulefiles directory where all modulefiles will go $ mkdir -p /work/01234/username/class-software/modulefiles/ $ cd /work/01234/username/class-software/modulefiles/ $ pwd /work/01234/username/class-software/modulefiles/ # Create a subdirectory and lua file for bedtools2, version 2.29.0 $ mkdir bedtools2/ $ touch bedtools2/2.29.0.lua All modulefiles will go in the modulefiles directory under a subfolder named after the package. Modulefiles have the extension .lua and are named after the software version. Multiple .lua files can exist in the same package subdirectory, enabling the support of multiple versions of the same package. The contents of 2.29.0.lua could include: local help_message = [[ This modulefile was prepared for the students taking A Class 101. Load this modulefile to gain access to the bedtools2/2.29.0 package. Please note that gcc/7.3.0 is a prerequisite and must be loaded first. Documentation: https://github.com/arq5x/bedtools2 Version 2.29.0 ]] help(help_message,\"\\n\") whatis(\"Name: bedtools2\") whatis(\"Version: 2.29.0\") whatis(\"Description: A powerful toolset for genome arithmetic\") whatis(\"URL: https://github.com/arq5x/bedtools2\") prepend_path(\"PATH\", \"/work/01234/username/class-software/bedtools2/2.29.0/bin\") prereq(\"gcc/7.3.0\") Don't forget to replace the PATH near the end of that file with your work directory. Please browse the /opt/apps/modulefiles/ directory on your TACC system of choice to see many other examples of modulefiles, or read the lmod documentation .","title":"Write the Modulefile"},{"location":"01.install_software/#change-permissions","text":"Next, recursively adjust Linux permissions in the class-software/ folder so that students with the same Unix group can see and access the software. $ chmod g=u-w /work/01234/username/ $ chmod -R g=u-w /work/01234/username/class-software/ If you happen to be part of multiple Linux groups, you may also need to change the group on the software folder to match to instructional allocation. The group ID can be found in the Portal by clicking on the instructional allocation / project. For example, if the Unix group is G-876543 : $ chgrp G-876543 /work/01234/username/ $ chgrp -R G-876543 /work/01234/username/class-software/","title":"Change Permissions"},{"location":"01.install_software/#instructions-to-use-class-modules","text":"Finally, the following steps can be used to access and load the new modulefile, and use the installed bedtools2 software. These steps apply to both the instructor who built the software, as well as the students: # Add the modulefile location to your modulepath: $ module use /work/01234/username/class-software/modulefiles # Save that modification so it only has to be done once $ module save # Print modulefile help text $ module help bedtools2/2.29.0 # Load the new module $ module load gcc/7.3.0 $ module load bedtools2/2.29.0 $ which bedtools /work/01234/username/class-software/bedtools2/2.29.0/bin/bedtools If you need help installing software or writing modulefiles, please submit a ticket through the TACC User Portal . Return to the Overview","title":"Instructions to Use Class Modules"},{"location":"01.manage_accounts/","text":"Manage Student Accounts To be added to a project, students must have already created a TACC account. If your students need to create a TACC account, they can follow our guide below. Creating a Student Account Students are encouraged to create an account with their institution provided email address. An institution email address is one that your college or university has issued to you upon matriculation and will end with a .edu address. Creating an Account with UT System Credentials Students from institutions belonging to the UT System are encouraged to create a TACC account with their UT System credentials. TACC has a single sign-on process for users from UT System affiliated institutions. Students can begin creating their account with their UT System Institution Credentials through this form . Select the school you attend and log in with your institution credentials. Click the I need to create a TACC account button. Enter your contact information and account information in the request form. You will see a field about PI eligibility. Students are ineligible to be a PI. Please select that you are not PI Eligible. TACC now requires Multi-Factor Authentication (MFA). To set up MFA, you can follow this tutorial . Creating an Account without UT System Credentials Students from institutions outside of the UT System are still encouraged to create a TACC account with their respective institutional email address. To create a TACC account, redirect your browser to the TACC User Portal . Click the Create a TACC Account button. Review the Request a TACC Portal Account page and click Continue to Create an Account . Accept the TACC Acceptable Use Policy . Enter your contact information and account information in the request form. You will see a field about PI eligibility. Students are ineligible to be a PI. Please select that you are not PI Eligible. Once your account is requested, you will receive a confirmation email within one business day with a link to verify your address. After verifying your email address, logon to the TACC User Portal . For your first login, you will be prompted to review and agree to the Terms of Use . TACC now requires Multi-Factor Authentication (MFA). To set up MFA, you can follow this tutorial . Adding Students to an Instructional Allocation Students can be added to your instructional allocation through the TACC User Portal . Sign in then hover over the Allocations tab in your dashboard and select Projects and Allocations . Select View Project Detail of the project you wish to add students to. In the Users section, select Add User . Search for student TACC accounts by Last Name , Email Address , or TACC Username . Find the student account you wish to add in the search results and select Add Selected User . Note that all users on one project will share the allocations of that project and belong to the same UNIX \"group\". As members of the same UNIX \"group\", users will typically share the same permissions (read, write, execute, etc.) on a set of files or directories. The UNIX \"group\" number will usually correspond to the project/allocation number and can be found by selecting View Project Detail of a project of your choice on the Projects and Allocations page. Removing Students from an Instructional Allocation An instructional allocation will last for the duration of the class plus 14 days. At anytime during the instructional allocation period you can remove a student manually. Sign in to the TACC User Portal . Hover over the Allocations tab in your dashboard and select Projects and Allocations . Select View Project Detail of the project you wish to remove students from. In the Users section, select Remove User to remove a student account from your project. Return to the Overview","title":"Manage Student Accounts"},{"location":"01.manage_accounts/#manage-student-accounts","text":"To be added to a project, students must have already created a TACC account. If your students need to create a TACC account, they can follow our guide below.","title":"Manage Student Accounts"},{"location":"01.manage_accounts/#creating-a-student-account","text":"Students are encouraged to create an account with their institution provided email address. An institution email address is one that your college or university has issued to you upon matriculation and will end with a .edu address.","title":"Creating a Student Account"},{"location":"01.manage_accounts/#creating-an-account-with-ut-system-credentials","text":"Students from institutions belonging to the UT System are encouraged to create a TACC account with their UT System credentials. TACC has a single sign-on process for users from UT System affiliated institutions. Students can begin creating their account with their UT System Institution Credentials through this form . Select the school you attend and log in with your institution credentials. Click the I need to create a TACC account button. Enter your contact information and account information in the request form. You will see a field about PI eligibility. Students are ineligible to be a PI. Please select that you are not PI Eligible. TACC now requires Multi-Factor Authentication (MFA). To set up MFA, you can follow this tutorial .","title":"Creating an Account with UT System Credentials"},{"location":"01.manage_accounts/#creating-an-account-without-ut-system-credentials","text":"Students from institutions outside of the UT System are still encouraged to create a TACC account with their respective institutional email address. To create a TACC account, redirect your browser to the TACC User Portal . Click the Create a TACC Account button. Review the Request a TACC Portal Account page and click Continue to Create an Account . Accept the TACC Acceptable Use Policy . Enter your contact information and account information in the request form. You will see a field about PI eligibility. Students are ineligible to be a PI. Please select that you are not PI Eligible. Once your account is requested, you will receive a confirmation email within one business day with a link to verify your address. After verifying your email address, logon to the TACC User Portal . For your first login, you will be prompted to review and agree to the Terms of Use . TACC now requires Multi-Factor Authentication (MFA). To set up MFA, you can follow this tutorial .","title":"Creating an Account without UT System Credentials"},{"location":"01.manage_accounts/#adding-students-to-an-instructional-allocation","text":"Students can be added to your instructional allocation through the TACC User Portal . Sign in then hover over the Allocations tab in your dashboard and select Projects and Allocations . Select View Project Detail of the project you wish to add students to. In the Users section, select Add User . Search for student TACC accounts by Last Name , Email Address , or TACC Username . Find the student account you wish to add in the search results and select Add Selected User . Note that all users on one project will share the allocations of that project and belong to the same UNIX \"group\". As members of the same UNIX \"group\", users will typically share the same permissions (read, write, execute, etc.) on a set of files or directories. The UNIX \"group\" number will usually correspond to the project/allocation number and can be found by selecting View Project Detail of a project of your choice on the Projects and Allocations page.","title":"Adding Students to an Instructional Allocation"},{"location":"01.manage_accounts/#removing-students-from-an-instructional-allocation","text":"An instructional allocation will last for the duration of the class plus 14 days. At anytime during the instructional allocation period you can remove a student manually. Sign in to the TACC User Portal . Hover over the Allocations tab in your dashboard and select Projects and Allocations . Select View Project Detail of the project you wish to remove students from. In the Users section, select Remove User to remove a student account from your project. Return to the Overview","title":"Removing Students from an Instructional Allocation"},{"location":"01.request_allocation/","text":"Request an Allocation Access to the various resources is gained by requesting an \"Allocation\" to work on that system. The steps to requesting an allocation are as follows: Create a Project Navigate to the Projects and Allocations page of the TACC Portal. Click the green +Create Project button. Note: If you do not have a +Create Project button, navigate to your account profile , then click on Edit Profile to request \"PI Eligibility\". Complete the Form Fill out the form with the following information: Title: (enter course title) Type: (select \"Instructional\") Primary Field of Science: (choose field from the list) Secondary Field of Science: (choose field from the list) Description/Abstract: (write a short course description) Once all the fields are filled out, click Create Project . This will take you back to the main Project and Allocation view, where you will find your new Instructional project. Request an Allocation Click on View Project Details for your Instructional project. In the Allocations section, choose Request New Allocation . Choose the machine(s) appropriate for your course, and request a small number of Service Units. A good general estimate is to start with 2,000 SUs. You may request more if you run out. In the \"justification\" section, briefly describe how the resources will be used. This may include information on how many students will be in the course, what types of code they will be running, etc. Most small instructional allocation requests are resolved within one to two days, but may take up to two weeks. Return to the Overview","title":"Request an Allocation"},{"location":"01.request_allocation/#request-an-allocation","text":"Access to the various resources is gained by requesting an \"Allocation\" to work on that system. The steps to requesting an allocation are as follows:","title":"Request an Allocation"},{"location":"01.request_allocation/#create-a-project","text":"Navigate to the Projects and Allocations page of the TACC Portal. Click the green +Create Project button. Note: If you do not have a +Create Project button, navigate to your account profile , then click on Edit Profile to request \"PI Eligibility\".","title":"Create a Project"},{"location":"01.request_allocation/#complete-the-form","text":"Fill out the form with the following information: Title: (enter course title) Type: (select \"Instructional\") Primary Field of Science: (choose field from the list) Secondary Field of Science: (choose field from the list) Description/Abstract: (write a short course description) Once all the fields are filled out, click Create Project . This will take you back to the main Project and Allocation view, where you will find your new Instructional project.","title":"Complete the Form"},{"location":"01.request_allocation/#request-an-allocation_1","text":"Click on View Project Details for your Instructional project. In the Allocations section, choose Request New Allocation . Choose the machine(s) appropriate for your course, and request a small number of Service Units. A good general estimate is to start with 2,000 SUs. You may request more if you run out. In the \"justification\" section, briefly describe how the resources will be used. This may include information on how many students will be in the course, what types of code they will be running, etc. Most small instructional allocation requests are resolved within one to two days, but may take up to two weeks. Return to the Overview","title":"Request an Allocation"},{"location":"02.helpful_commands/","text":"Helpful Commands Here is a collection of commands that may be useful on the HPC clusters: Show Disk Usage $ du -hs directory-name/ Check Your Quota / Allocation Balance $ /usr/local/etc/taccinfo Quickly Navigate Between Filesystems $ cd # cd to home directory $ cdw # cd to work directory $ cds # cd to scratch directory Return to the Overview","title":"Helpful Commands"},{"location":"02.helpful_commands/#helpful-commands","text":"Here is a collection of commands that may be useful on the HPC clusters: Show Disk Usage $ du -hs directory-name/ Check Your Quota / Allocation Balance $ /usr/local/etc/taccinfo Quickly Navigate Between Filesystems $ cd # cd to home directory $ cdw # cd to work directory $ cds # cd to scratch directory Return to the Overview","title":"Helpful Commands"},{"location":"02.reservation_requests/","text":"Request a Queue Reservation TACC clusters consistently operate at very high node occupancy, meaning compute nodes are not necessarily instantly available for interactive sessions or batch jobs. However, PIs may request a queue reservation for a specific date, time, duration, and number of nodes. Submit a Request To make a reservation request, please submit a ticket here . Include the following information in the request: TACC cluster name Start date / time End date / time Number of nodes in the reservation List of usernames who should have access Your instructional allocation will be billed for the entire duration of the reservation. For example, if you reserve 30 nodes for 3 hours, your allocation will be charged (30 x 3) 90 SUs whether or not they are all actively used for the entire reservation. Please submit requests at least two weeks before the desired start date. Use a Reservation For an interactive session, use the following flag: [login]$ idev -r reservation_name For a batch job, use the following flag: [login]$ sbatch --reservation=reservation_name myjobscript.slurm Return to the Overview","title":"Request a Queue Reservation"},{"location":"02.reservation_requests/#request-a-queue-reservation","text":"TACC clusters consistently operate at very high node occupancy, meaning compute nodes are not necessarily instantly available for interactive sessions or batch jobs. However, PIs may request a queue reservation for a specific date, time, duration, and number of nodes.","title":"Request a Queue Reservation"},{"location":"02.reservation_requests/#submit-a-request","text":"To make a reservation request, please submit a ticket here . Include the following information in the request: TACC cluster name Start date / time End date / time Number of nodes in the reservation List of usernames who should have access Your instructional allocation will be billed for the entire duration of the reservation. For example, if you reserve 30 nodes for 3 hours, your allocation will be charged (30 x 3) 90 SUs whether or not they are all actively used for the entire reservation. Please submit requests at least two weeks before the desired start date.","title":"Submit a Request"},{"location":"02.reservation_requests/#use-a-reservation","text":"For an interactive session, use the following flag: [login]$ idev -r reservation_name For a batch job, use the following flag: [login]$ sbatch --reservation=reservation_name myjobscript.slurm Return to the Overview","title":"Use a Reservation"},{"location":"02.running_jobs/","text":"Submit Jobs to the Queue Batch jobs are a type of non-interactive job that a user can submit to a queue. Once the requested resources are available, the batch job will automatically start running non-interactively on a compute node(s). Users do not need to be logged in or monitoring their batch jobs for them to automatically start. Write a Batch Job Script A batch job requires a short script with two sections. The first section (with lines beginning with #SBATCH ) includes directives for the scheduler including what the job name should be, how many nodes are needed, what is the desired wall time, etc. The second section contains command-line instructions for applications to run. For example, that is where you would execute a python or matlab script. An example minimal batch job script is as follows: #!/bin/bash #SBATCH -J myjob # Job name #SBATCH -o myjob.o%j # Name of stdout output file #SBATCH -p normal # Queue (partition) name #SBATCH -N 1 # Total # of nodes #SBATCH -n 1 # Total # of mpi tasks #SBATCH -t 01:30:00 # Run time (hh:mm:ss) #SBATCH -A myproject # Allocation name (req'd if you have more than 1) # Other commands must follow all #SBATCH directives... ./mycode.exe Detailed information on the acceptable parameters as well as example job scripts can be found in the User Guide for the machine you are using. Submitting and Managing a Batch Job Once the job script is written, you can submit a batch job to the queue with: $ sbatch myjobscript.slurm Monitor the status of the job with showq (pass the -u flag to only show your jobs): $ showq -u Jobs can be deleted if you provide the job ID: $ scancel 123456 Return to the Overview","title":"Submit Jobs to the Queue"},{"location":"02.running_jobs/#submit-jobs-to-the-queue","text":"Batch jobs are a type of non-interactive job that a user can submit to a queue. Once the requested resources are available, the batch job will automatically start running non-interactively on a compute node(s). Users do not need to be logged in or monitoring their batch jobs for them to automatically start.","title":"Submit Jobs to the Queue"},{"location":"02.running_jobs/#write-a-batch-job-script","text":"A batch job requires a short script with two sections. The first section (with lines beginning with #SBATCH ) includes directives for the scheduler including what the job name should be, how many nodes are needed, what is the desired wall time, etc. The second section contains command-line instructions for applications to run. For example, that is where you would execute a python or matlab script. An example minimal batch job script is as follows: #!/bin/bash #SBATCH -J myjob # Job name #SBATCH -o myjob.o%j # Name of stdout output file #SBATCH -p normal # Queue (partition) name #SBATCH -N 1 # Total # of nodes #SBATCH -n 1 # Total # of mpi tasks #SBATCH -t 01:30:00 # Run time (hh:mm:ss) #SBATCH -A myproject # Allocation name (req'd if you have more than 1) # Other commands must follow all #SBATCH directives... ./mycode.exe Detailed information on the acceptable parameters as well as example job scripts can be found in the User Guide for the machine you are using.","title":"Write a Batch Job Script"},{"location":"02.running_jobs/#submitting-and-managing-a-batch-job","text":"Once the job script is written, you can submit a batch job to the queue with: $ sbatch myjobscript.slurm Monitor the status of the job with showq (pass the -u flag to only show your jobs): $ showq -u Jobs can be deleted if you provide the job ID: $ scancel 123456 Return to the Overview","title":"Submitting and Managing a Batch Job"},{"location":"02.sharing_files/","text":"Share Project Files As an instructor, you may have code, data, or other project files that need to be shared publicly with your classroom. Additionally, students may have assignments, projects, or exams that need to be shared privately with the instructor. Follow this guide to create public, shared classroom workspaces as well as private, individual student directories. Create a Shared Directory for the Classroom This shared directory will serve as a project workspace for the classroom and is only accessible to users in the same allocation. Recall that all users on one project will share the allocations of that project and belong to the same UNIX \"group\". As members of the same UNIX group, users will typically share the same permissions (read, write, execute, etc.) on a set of files or directories. The UNIX group number (ex. G-876543 ) will usually correspond to the project/allocation number and can be found in the Portal by selecting View Project Detail of a project of your choice on the Projects and Allocations page. Shared directories and files should be in your work directory on Stockyard. To access $STOCKYARD , log in to a system of your choice. A comprehensive guide for logging in to TACC systems will not be included here. Please check the user guides for logging in to TACC machines. To create a shared directory, you can follow the commands below or navigate to our helper script . Make your $STOCKYARD directory accessible to users in your group. $ chmod g+X $STOCKYARD Navigate to your work directory on Stockyard and create a class directory to be shared. $ cd $STOCKYARD; mkdir class-directory Your shared class directory will need to belong to the UNIX group that matches with your project allocation. To do so, set the UNIX group using the command below. For example, if the UNIX group is G-876543 : $ chgrp -R G-876543 class-directory Set your group ID so that new files created in the shared class directory will inherit the group ownership. $ chmod g+s class-directory Set your permissions so that the project workspace is readable and accessible to group members. $ chmod g+rX class-directory Lastly, take note of the path to your directory. Students will be able to access files in the shared directory through this path. $ cd class-directory $ pwd /work/01234/username/class-directory/ Helper Script 1 In your preferred text editor, copy and paste the code below and save as a shell script named share_project.sh . Please note that you will have to switch the UNIX group to the group that matches with your project allocation. #!/bin/bash chmod g+X $STOCKYARD cd $STOCKYARD mkdir class-directory chgrp -R G-876543 class-directory chmod g+s class-directory chmod g+rX class-directory cd class-directory echo $(pwd) Execute the shell script by entering the following commands: $ chmod +x share_project.sh $ ./share_project.sh Alternatively, you can wget the script from the command line by doing the following: $ wget https://raw.githubusercontent.com/TACC/TeachingWithTACC/master/docs/scripts/share_project.sh # Change the UNIX group in the script to the group that matches with your project allocation $ chmod +x share_project.sh $ ./share_project.sh Upon execution of this script, you will see output in your terminal of the path to your new class directory. Please note the path of your directory, as students will be able to access files in the shared directory through this path. /work/01234/username/class-directory/ Copy a File from the Shared Directory To copy a file located in the shared class directory, log in to a system of your choice and enter the following commands: # Copy the file into your work file system $ cd $WORK # Rename the file with your TACC username $ cp /work/01234/username/class-directory/file1 student_username_file1 Create Student Directories for Handing in Assignments Individual student directories with permissions specific to that student will protect students' homework from being seen by other users in the same allocation. We encourage you to create a subdirectory in the class-directory we made earlier to contain all of the student folders. To create the individual student directories, we have provided a helper script below. On a system of your choice: $ cd $STOCKYARD; cd class-directory $ mkdir class-assignments; cd class-assignments Helper Script 2 In your preferred text editor, copy and paste the code below and save as a shell script named student_dirs.sh . #!/bin/bash for USERNAME in $@ do if id -u \"$USERNAME\" >/dev/null 2>&1; then echo \"Making a folder for $USERNAME...\" mkdir $USERNAME setfacl -m u:$USERNAME:rwx $USERNAME else echo \"$USERNAME does not exist\" fi done unset USERNAME Execute the shell script, listing the usernames of students to generate individual student directories: $ chmod g+rX student_dirs.sh $ bash student_dirs.sh username1 username2 username3 username4 username5 Alternatively, you can wget the script from the command line by doing the following: $ wget https://raw.githubusercontent.com/TACC/TeachingWithTACC/master/docs/scripts/student_dirs.sh $ chmod g+rX student_dirs.sh # List out the usernames of students in your class $ bash student_dirs.sh username1 username2 username3 username4 username5 Return to the Overview","title":"Share Project Files"},{"location":"02.sharing_files/#share-project-files","text":"As an instructor, you may have code, data, or other project files that need to be shared publicly with your classroom. Additionally, students may have assignments, projects, or exams that need to be shared privately with the instructor. Follow this guide to create public, shared classroom workspaces as well as private, individual student directories.","title":"Share Project Files"},{"location":"02.sharing_files/#create-a-shared-directory-for-the-classroom","text":"This shared directory will serve as a project workspace for the classroom and is only accessible to users in the same allocation. Recall that all users on one project will share the allocations of that project and belong to the same UNIX \"group\". As members of the same UNIX group, users will typically share the same permissions (read, write, execute, etc.) on a set of files or directories. The UNIX group number (ex. G-876543 ) will usually correspond to the project/allocation number and can be found in the Portal by selecting View Project Detail of a project of your choice on the Projects and Allocations page. Shared directories and files should be in your work directory on Stockyard. To access $STOCKYARD , log in to a system of your choice. A comprehensive guide for logging in to TACC systems will not be included here. Please check the user guides for logging in to TACC machines. To create a shared directory, you can follow the commands below or navigate to our helper script . Make your $STOCKYARD directory accessible to users in your group. $ chmod g+X $STOCKYARD Navigate to your work directory on Stockyard and create a class directory to be shared. $ cd $STOCKYARD; mkdir class-directory Your shared class directory will need to belong to the UNIX group that matches with your project allocation. To do so, set the UNIX group using the command below. For example, if the UNIX group is G-876543 : $ chgrp -R G-876543 class-directory Set your group ID so that new files created in the shared class directory will inherit the group ownership. $ chmod g+s class-directory Set your permissions so that the project workspace is readable and accessible to group members. $ chmod g+rX class-directory Lastly, take note of the path to your directory. Students will be able to access files in the shared directory through this path. $ cd class-directory $ pwd /work/01234/username/class-directory/","title":"Create a Shared Directory for the Classroom"},{"location":"02.sharing_files/#helper-script-1","text":"In your preferred text editor, copy and paste the code below and save as a shell script named share_project.sh . Please note that you will have to switch the UNIX group to the group that matches with your project allocation. #!/bin/bash chmod g+X $STOCKYARD cd $STOCKYARD mkdir class-directory chgrp -R G-876543 class-directory chmod g+s class-directory chmod g+rX class-directory cd class-directory echo $(pwd) Execute the shell script by entering the following commands: $ chmod +x share_project.sh $ ./share_project.sh Alternatively, you can wget the script from the command line by doing the following: $ wget https://raw.githubusercontent.com/TACC/TeachingWithTACC/master/docs/scripts/share_project.sh # Change the UNIX group in the script to the group that matches with your project allocation $ chmod +x share_project.sh $ ./share_project.sh Upon execution of this script, you will see output in your terminal of the path to your new class directory. Please note the path of your directory, as students will be able to access files in the shared directory through this path. /work/01234/username/class-directory/","title":"Helper Script 1"},{"location":"02.sharing_files/#copy-a-file-from-the-shared-directory","text":"To copy a file located in the shared class directory, log in to a system of your choice and enter the following commands: # Copy the file into your work file system $ cd $WORK # Rename the file with your TACC username $ cp /work/01234/username/class-directory/file1 student_username_file1","title":"Copy a File from the Shared Directory"},{"location":"02.sharing_files/#create-student-directories-for-handing-in-assignments","text":"Individual student directories with permissions specific to that student will protect students' homework from being seen by other users in the same allocation. We encourage you to create a subdirectory in the class-directory we made earlier to contain all of the student folders. To create the individual student directories, we have provided a helper script below. On a system of your choice: $ cd $STOCKYARD; cd class-directory $ mkdir class-assignments; cd class-assignments","title":"Create Student Directories for Handing in Assignments"},{"location":"02.sharing_files/#helper-script-2","text":"In your preferred text editor, copy and paste the code below and save as a shell script named student_dirs.sh . #!/bin/bash for USERNAME in $@ do if id -u \"$USERNAME\" >/dev/null 2>&1; then echo \"Making a folder for $USERNAME...\" mkdir $USERNAME setfacl -m u:$USERNAME:rwx $USERNAME else echo \"$USERNAME does not exist\" fi done unset USERNAME Execute the shell script, listing the usernames of students to generate individual student directories: $ chmod g+rX student_dirs.sh $ bash student_dirs.sh username1 username2 username3 username4 username5 Alternatively, you can wget the script from the command line by doing the following: $ wget https://raw.githubusercontent.com/TACC/TeachingWithTACC/master/docs/scripts/student_dirs.sh $ chmod g+rX student_dirs.sh # List out the usernames of students in your class $ bash student_dirs.sh username1 username2 username3 username4 username5 Return to the Overview","title":"Helper Script 2"},{"location":"02.work_interactively/","text":"Work Interactively on a Node Logging in to one of the TACC clusters will place you on a shared login node . These are shared resources and users should not run applications here (including Python, Matlab, R, or any other code downloaded from the internet). Instead, these applications should be run on a compute node . Determine if You Are on a Login or Compute Node To determine what type of node you are logged into, use the command hostname . The output of hostname will either show a login node (e.g. login1 , login2 ), or it will show a series of letters and numbers (e.g. nid00015 , c001-005 ) indicating a compute node. The exact output will vary from cluster to cluster. By default, the same information is located at the beginning of the command prompt, as is seen in the next section. Connect to a Compute Node To launch an interactive session on a compute node, use the idev command. Below is an example of idev launching from a login node on Lonestar 5 with the default options: [login]$ idev -> Defaults file : ~/.idevrc -> System : ls5 -> Queue : development (idev default ) -> Nodes : 1 (idev default ) -> Tasks per Node : 24 (~/.idevrc ) -> Time (minutes) : 30 (idev default ) -> Project : PROJECT-NAME (~/.idevrc ) ----------------------------------------------------------------- Welcome to the Lonestar 5 Supercomputer ----------------------------------------------------------------- No reservation for this job --> Verifying valid submit host (login1)...OK --> Verifying valid jobname...OK --> Enforcing max jobs per user...OK --> Verifying availability of your home dir (/home1/01234/username)...OK --> Verifying availability of your work dir (/work/01234/username)...OK --> Verifying availability of your scratch dir (/scratch/01234/username)...OK --> Verifying valid ssh keys...OK --> Verifying access to desired queue (development)...OK --> Verifying job request is within current queue limits...OK --> Checking available allocation (PROJECT-NAME)...OK Submitted batch job 2573629 -> After your idev job begins to run, a command prompt will appear, -> and you can begin your interactive development session. -> We will report the job status every 4 seconds: (PD=pending, R=running). ->job status: PD ->job status: R -> Job is now running on masternode= nid00015...OK -> Sleeping for 7 seconds...OK -> Checking to make sure your job has initialized an env for you....OK -> Creating interactive terminal session (login) on master node nid00015. [nid00015]$ # note that command prompt has changed Useful idev Options You can pass options to idev to control the nature of the interactive job. This includes number of nodes, number of MPI processes, duration of the session, and identity of the queue. For example: [login]$ idev -N 1 -p development -m 120 The above command will launch a session on one node ( -N 1 ) in the development queue ( -p development ) for a duration of 120 minutes ( -m 120 ). A full list of idev options can be seen by issuing: [login]$ idev -h Connect Multiple Terminals to the Same Interactive Session It may be useful to have multiple terminals connected to the same interactive session on the same compute node. To do this, first launch a job with idev from one terminal: Terminal 1 [login]$ idev ... [nid00015]$ From the command prompt above, you can see the interactive session launched on a compute node with hostname nid00015 . From the second terminal, type: Terminal 2 [login]$ ssh nid00015 ... [nid00015]$ Now both terminals are connected to the same compute node in the interactive session. When the job ends, or when the first terminal disconnects from the compute node, the second terminal will also be disconnected automatically. Return to the Overview","title":"Work Interactively on a Node"},{"location":"02.work_interactively/#work-interactively-on-a-node","text":"Logging in to one of the TACC clusters will place you on a shared login node . These are shared resources and users should not run applications here (including Python, Matlab, R, or any other code downloaded from the internet). Instead, these applications should be run on a compute node .","title":"Work Interactively on a Node"},{"location":"02.work_interactively/#determine-if-you-are-on-a-login-or-compute-node","text":"To determine what type of node you are logged into, use the command hostname . The output of hostname will either show a login node (e.g. login1 , login2 ), or it will show a series of letters and numbers (e.g. nid00015 , c001-005 ) indicating a compute node. The exact output will vary from cluster to cluster. By default, the same information is located at the beginning of the command prompt, as is seen in the next section.","title":"Determine if You Are on a Login or Compute Node"},{"location":"02.work_interactively/#connect-to-a-compute-node","text":"To launch an interactive session on a compute node, use the idev command. Below is an example of idev launching from a login node on Lonestar 5 with the default options: [login]$ idev -> Defaults file : ~/.idevrc -> System : ls5 -> Queue : development (idev default ) -> Nodes : 1 (idev default ) -> Tasks per Node : 24 (~/.idevrc ) -> Time (minutes) : 30 (idev default ) -> Project : PROJECT-NAME (~/.idevrc ) ----------------------------------------------------------------- Welcome to the Lonestar 5 Supercomputer ----------------------------------------------------------------- No reservation for this job --> Verifying valid submit host (login1)...OK --> Verifying valid jobname...OK --> Enforcing max jobs per user...OK --> Verifying availability of your home dir (/home1/01234/username)...OK --> Verifying availability of your work dir (/work/01234/username)...OK --> Verifying availability of your scratch dir (/scratch/01234/username)...OK --> Verifying valid ssh keys...OK --> Verifying access to desired queue (development)...OK --> Verifying job request is within current queue limits...OK --> Checking available allocation (PROJECT-NAME)...OK Submitted batch job 2573629 -> After your idev job begins to run, a command prompt will appear, -> and you can begin your interactive development session. -> We will report the job status every 4 seconds: (PD=pending, R=running). ->job status: PD ->job status: R -> Job is now running on masternode= nid00015...OK -> Sleeping for 7 seconds...OK -> Checking to make sure your job has initialized an env for you....OK -> Creating interactive terminal session (login) on master node nid00015. [nid00015]$ # note that command prompt has changed","title":"Connect to a Compute Node"},{"location":"02.work_interactively/#useful-idev-options","text":"You can pass options to idev to control the nature of the interactive job. This includes number of nodes, number of MPI processes, duration of the session, and identity of the queue. For example: [login]$ idev -N 1 -p development -m 120 The above command will launch a session on one node ( -N 1 ) in the development queue ( -p development ) for a duration of 120 minutes ( -m 120 ). A full list of idev options can be seen by issuing: [login]$ idev -h","title":"Useful idev Options"},{"location":"02.work_interactively/#connect-multiple-terminals-to-the-same-interactive-session","text":"It may be useful to have multiple terminals connected to the same interactive session on the same compute node. To do this, first launch a job with idev from one terminal: Terminal 1 [login]$ idev ... [nid00015]$ From the command prompt above, you can see the interactive session launched on a compute node with hostname nid00015 . From the second terminal, type: Terminal 2 [login]$ ssh nid00015 ... [nid00015]$ Now both terminals are connected to the same compute node in the interactive session. When the job ends, or when the first terminal disconnects from the compute node, the second terminal will also be disconnected automatically. Return to the Overview","title":"Connect Multiple Terminals to the Same Interactive Session"},{"location":"03.accessing_data/","text":"Accessing Data To access files stored in the UTRC Portal, you can follow the Globus Data Transfer Guide . For educators who are familiar with Cyberduck , or would like to use Cyberduck to access files stored in the UTRC Portal, follow our guide below. Cyberduck is a free graphical tool for data transfer and an alternative to using the command line. With a drag-and-drop interface, it is easy to transfer a file from the UTRC Portal to your local system. You can use Cyberduck for Windows or macOS. Windows Cyberduck Download and install Cyberduck for Windows on your local machine. Click Open Connection in the top left corner of your Cyberduck window. To setup a connection, select SFTP (SSH File Transfer Protocol) from the drop-down menu and type in the server name data.tacc.utexas.edu . Add your TACC username and password in the spaces provided. If the More Options area is not shown, click the small triangle button to expand the window; this will allow you to enter the path to your UTRC project directory (ex. /corral-repl/tacc/aci/UTRC/projects/UTRC-ProjectIDNumber ) so that when Cyberduck opens the connection you will immediately be in the UTRC project folder on Corral. Remember to replace ProjectIDNumber with the correct number of the project folder you wish to connect to. Click the Connect button to open your connection. To Identify Project ID Numbers: Instructors & Students: If you are the PI of the project folder, you can find the Project ID Number by navigating to the My Projects section of the UTRC Portal. The unique Project ID Number of each project is listed under Project Id in the second column. Otherwise, you will have to contact the PI of the project folder you wish to connect to via Cyberduck to receive the Project ID Number. Note: The PI of the project folder you wish to connect to via Cyberduck will provide you with the Project ID Number to be used in the path. For example, if your PI has a project called Example Project with a corresponding Project ID Number of 26, the path to Example Project would be /corral-repl/tacc/aci/UTRC/projects/UTRC-26 . You will be prompted to \u201callow unknown fingerprint\u2026\u201d upon connection. Select allow and enter your TACC token value. Once connected, you can navigate through your remote file hierarchy using familiar graphical navigation techniques. You may also drag-and-drop files from your local computer into the Cyberduck window to transfer files to Corral. macOS Cyberduck Download and install Cyberduck for macOS on your local machine. Once installed, go to Bookmark > New Bookmark to setup a connection. Note: You cannot select Open Connection in the top left corner of your Cyberduck window as macOS\u2019 setup screen is missing the More Options button. To setup a connection using New Bookmark , select SFTP (SSH File Transfer Protocol) from the drop-down menu. Type in the server name data.tacc.utexas.edu . Add your TACC username and password in the spaces provided. If the More Options area is not shown, click the small triangle or button to expand the window; this will allow you to enter the path to your transfer directory (ex. /corral-repl/tacc/aci/UTRC/projects/UTRC-ProjectIDNumber ) so that when Cyberduck opens the connection you will immediately be in the UTRC project folder on Corral. Remember to replace ProjectIDNumber with the correct number of the project folder you wish to connect to. As you fill out the information, Cyberduck will be creating the bookmark for you. Exit out of the setup screen and click on your newly created bookmark to launch the connection. To Identify Project ID Numbers: Instructors & Students: If you are the PI of the project folder, you can find the Project ID Number by navigating to the My Projects section of the UTRC Portal. The unique Project ID Number of each project is listed under Project Id in the second column. Otherwise, you will have to contact the PI of the project folder you wish to connect to via Cyberduck to receive the Project ID Number. Note: The PI of the project folder you wish to connect to via Cyberduck will provide you with the Project ID Number to be used in the path. For example, if your PI has a project called Example Project with a corresponding Project ID Number of 26, the path to Example Project would be /corral-repl/tacc/aci/UTRC/projects/UTRC-26 . You will be prompted to \u201callow unknown fingerprint\u2026\u201d upon connection. Select allow and enter your TACC token value. Once connected, you can navigate through your remote file hierarchy using familiar graphical navigation techniques. You may also drag-and-drop files from your local computer into the Cyberduck window to transfer files to Corral. Return to the Overview","title":"Accessing Data"},{"location":"03.accessing_data/#accessing-data","text":"To access files stored in the UTRC Portal, you can follow the Globus Data Transfer Guide . For educators who are familiar with Cyberduck , or would like to use Cyberduck to access files stored in the UTRC Portal, follow our guide below. Cyberduck is a free graphical tool for data transfer and an alternative to using the command line. With a drag-and-drop interface, it is easy to transfer a file from the UTRC Portal to your local system. You can use Cyberduck for Windows or macOS.","title":"Accessing Data"},{"location":"03.accessing_data/#windows-cyberduck","text":"Download and install Cyberduck for Windows on your local machine. Click Open Connection in the top left corner of your Cyberduck window. To setup a connection, select SFTP (SSH File Transfer Protocol) from the drop-down menu and type in the server name data.tacc.utexas.edu . Add your TACC username and password in the spaces provided. If the More Options area is not shown, click the small triangle button to expand the window; this will allow you to enter the path to your UTRC project directory (ex. /corral-repl/tacc/aci/UTRC/projects/UTRC-ProjectIDNumber ) so that when Cyberduck opens the connection you will immediately be in the UTRC project folder on Corral. Remember to replace ProjectIDNumber with the correct number of the project folder you wish to connect to. Click the Connect button to open your connection. To Identify Project ID Numbers: Instructors & Students: If you are the PI of the project folder, you can find the Project ID Number by navigating to the My Projects section of the UTRC Portal. The unique Project ID Number of each project is listed under Project Id in the second column. Otherwise, you will have to contact the PI of the project folder you wish to connect to via Cyberduck to receive the Project ID Number. Note: The PI of the project folder you wish to connect to via Cyberduck will provide you with the Project ID Number to be used in the path. For example, if your PI has a project called Example Project with a corresponding Project ID Number of 26, the path to Example Project would be /corral-repl/tacc/aci/UTRC/projects/UTRC-26 . You will be prompted to \u201callow unknown fingerprint\u2026\u201d upon connection. Select allow and enter your TACC token value. Once connected, you can navigate through your remote file hierarchy using familiar graphical navigation techniques. You may also drag-and-drop files from your local computer into the Cyberduck window to transfer files to Corral.","title":"Windows Cyberduck"},{"location":"03.accessing_data/#macos-cyberduck","text":"Download and install Cyberduck for macOS on your local machine. Once installed, go to Bookmark > New Bookmark to setup a connection. Note: You cannot select Open Connection in the top left corner of your Cyberduck window as macOS\u2019 setup screen is missing the More Options button. To setup a connection using New Bookmark , select SFTP (SSH File Transfer Protocol) from the drop-down menu. Type in the server name data.tacc.utexas.edu . Add your TACC username and password in the spaces provided. If the More Options area is not shown, click the small triangle or button to expand the window; this will allow you to enter the path to your transfer directory (ex. /corral-repl/tacc/aci/UTRC/projects/UTRC-ProjectIDNumber ) so that when Cyberduck opens the connection you will immediately be in the UTRC project folder on Corral. Remember to replace ProjectIDNumber with the correct number of the project folder you wish to connect to. As you fill out the information, Cyberduck will be creating the bookmark for you. Exit out of the setup screen and click on your newly created bookmark to launch the connection. To Identify Project ID Numbers: Instructors & Students: If you are the PI of the project folder, you can find the Project ID Number by navigating to the My Projects section of the UTRC Portal. The unique Project ID Number of each project is listed under Project Id in the second column. Otherwise, you will have to contact the PI of the project folder you wish to connect to via Cyberduck to receive the Project ID Number. Note: The PI of the project folder you wish to connect to via Cyberduck will provide you with the Project ID Number to be used in the path. For example, if your PI has a project called Example Project with a corresponding Project ID Number of 26, the path to Example Project would be /corral-repl/tacc/aci/UTRC/projects/UTRC-26 . You will be prompted to \u201callow unknown fingerprint\u2026\u201d upon connection. Select allow and enter your TACC token value. Once connected, you can navigate through your remote file hierarchy using familiar graphical navigation techniques. You may also drag-and-drop files from your local computer into the Cyberduck window to transfer files to Corral. Return to the Overview","title":"macOS Cyberduck"},{"location":"03.add_features/","text":"Additional Features of the UTRC Portal Applications The Applications section of the UTRC Portal allows you to select and launch applications or workflows on TACC's HPC (High Performance Computing) resources, using data from storage systems found in the Data Files section. Applications allows users to perform simulations and analyze data using popular simulation codes, as well as data analysis and visualization tools including Jupyter, MATLAB, and QGIS. Users can also publish their own private applications and manage them under the My Apps tab in the toolbar. To learn more, contact acantu@tacc.utexas.edu . Note: It is the Project PI's responsibility to provide resources or links to documentation about portal-specific applications for their users and guidance on how to use the project's allocated resources properly on the HPC resources. Additional applications can be added to the portal as requested by the project. These apps have to be vetted for compatibility with TACC resources, tested, then published into the Agave ecosystem before they can be exposed in the portal UI. The TACC portals team can assist users in identifying and validating apps for use in the portal based on their requirements. To request a custom portal app, please submit a ticket here . Return to the Overview","title":"Additional Features of the UTRC Portal"},{"location":"03.add_features/#additional-features-of-the-utrc-portal","text":"","title":"Additional Features of the UTRC Portal"},{"location":"03.add_features/#applications","text":"The Applications section of the UTRC Portal allows you to select and launch applications or workflows on TACC's HPC (High Performance Computing) resources, using data from storage systems found in the Data Files section. Applications allows users to perform simulations and analyze data using popular simulation codes, as well as data analysis and visualization tools including Jupyter, MATLAB, and QGIS. Users can also publish their own private applications and manage them under the My Apps tab in the toolbar. To learn more, contact acantu@tacc.utexas.edu . Note: It is the Project PI's responsibility to provide resources or links to documentation about portal-specific applications for their users and guidance on how to use the project's allocated resources properly on the HPC resources. Additional applications can be added to the portal as requested by the project. These apps have to be vetted for compatibility with TACC resources, tested, then published into the Agave ecosystem before they can be exposed in the portal UI. The TACC portals team can assist users in identifying and validating apps for use in the portal based on their requirements. To request a custom portal app, please submit a ticket here . Return to the Overview","title":"Applications"},{"location":"03.getting_started/","text":"Getting Started Create a UTRC Portal Account A comprehensive guide to creating a UTRC Portal account is available here . Please follow the steps outlined in the Logging in for the First Time section of Getting Started . Note: In order to access the UTRC Portal, you will need to have an active TACC account. If you do not have one already, please follow section 1.1 Create a TACC Account of our Teaching with TACC guide. You will also have to be on an active project allocation to access the UTRC Portal. Ask the Principal Investigator of your research project to add you to their project allocation through the TACC User Portal . To finish onboarding, complete the Getting An Allocation , Setting up Multi-factor Authentication , and Accessing Your Files section(s) of Getting Started . Return to the Overview","title":"Getting Started"},{"location":"03.getting_started/#getting-started","text":"","title":"Getting Started"},{"location":"03.getting_started/#create-a-utrc-portal-account","text":"A comprehensive guide to creating a UTRC Portal account is available here . Please follow the steps outlined in the Logging in for the First Time section of Getting Started . Note: In order to access the UTRC Portal, you will need to have an active TACC account. If you do not have one already, please follow section 1.1 Create a TACC Account of our Teaching with TACC guide. You will also have to be on an active project allocation to access the UTRC Portal. Ask the Principal Investigator of your research project to add you to their project allocation through the TACC User Portal . To finish onboarding, complete the Getting An Allocation , Setting up Multi-factor Authentication , and Accessing Your Files section(s) of Getting Started . Return to the Overview","title":"Create a UTRC Portal Account"},{"location":"03.managing_data/","text":"Managing Data Navigating the Data Files Section of the UTRC Portal Data Files is a multi-purpose data repository that enables users to organize and personalize their data files and share them with others. Features include: File uploads and downloads Searching files File manipulation operations (ex. Rename, Move, Copy, Preview, Compress, Extract, Download, Move to Trash) Data Organization Data is organized into several categories: My Data This is your private data workspace, only accessible to you. As a result, you have ownership and read/write permissions over these files and folders. My Projects This is your shared workspace, where you can create project folders (using the +Add button) to be shared with other collaborators. Any user added to a specific project by the PI can access data uploaded into that specific project folder. Note: A project under My Projects is a shared workspace and is different from a project allocation through TACC\u2019s User Portal. Any user can be a PI, Co-PI, and/or Collaborator in the UTRC Portal (this is different from the PI Eligibility Requirements required for TACC\u2019s User Portal). Community Data Community Data is data that is viewable by all authorized portal users. Public Data Public Data is data that is viewable by all portal users, authorized or not. Google Drive This area contains any files stored in the user's Google Drive if they have added support for Google Drive under their user account. Additional third-party technologies can be integrated into portals upon request (once deemed compatible with the portal). Return to the Overview","title":"Managing Data"},{"location":"03.managing_data/#managing-data","text":"","title":"Managing Data"},{"location":"03.managing_data/#navigating-the-data-files-section-of-the-utrc-portal","text":"Data Files is a multi-purpose data repository that enables users to organize and personalize their data files and share them with others. Features include: File uploads and downloads Searching files File manipulation operations (ex. Rename, Move, Copy, Preview, Compress, Extract, Download, Move to Trash)","title":"Navigating the Data Files Section of the UTRC Portal"},{"location":"03.managing_data/#data-organization","text":"Data is organized into several categories:","title":"Data Organization"},{"location":"03.managing_data/#my-data","text":"This is your private data workspace, only accessible to you. As a result, you have ownership and read/write permissions over these files and folders.","title":"My Data"},{"location":"03.managing_data/#my-projects","text":"This is your shared workspace, where you can create project folders (using the +Add button) to be shared with other collaborators. Any user added to a specific project by the PI can access data uploaded into that specific project folder. Note: A project under My Projects is a shared workspace and is different from a project allocation through TACC\u2019s User Portal. Any user can be a PI, Co-PI, and/or Collaborator in the UTRC Portal (this is different from the PI Eligibility Requirements required for TACC\u2019s User Portal).","title":"My Projects"},{"location":"03.managing_data/#community-data","text":"Community Data is data that is viewable by all authorized portal users.","title":"Community Data"},{"location":"03.managing_data/#public-data","text":"Public Data is data that is viewable by all portal users, authorized or not.","title":"Public Data"},{"location":"03.managing_data/#google-drive","text":"This area contains any files stored in the user's Google Drive if they have added support for Google Drive under their user account. Additional third-party technologies can be integrated into portals upon request (once deemed compatible with the portal). Return to the Overview","title":"Google Drive"}]}